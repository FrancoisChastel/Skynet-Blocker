// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.5
// source: protos/skynet.proto

package Skynet_Blocker

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AnonymApproach int32

const (
	AnonymApproach_K_Anonym    AnonymApproach = 0
	AnonymApproach_L_Diversity AnonymApproach = 1
	AnonymApproach_T_CLOSENESS AnonymApproach = 2
)

// Enum value maps for AnonymApproach.
var (
	AnonymApproach_name = map[int32]string{
		0: "K_Anonym",
		1: "L_Diversity",
		2: "T_CLOSENESS",
	}
	AnonymApproach_value = map[string]int32{
		"K_Anonym":    0,
		"L_Diversity": 1,
		"T_CLOSENESS": 2,
	}
)

func (x AnonymApproach) Enum() *AnonymApproach {
	p := new(AnonymApproach)
	*p = x
	return p
}

func (x AnonymApproach) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AnonymApproach) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_skynet_proto_enumTypes[0].Descriptor()
}

func (AnonymApproach) Type() protoreflect.EnumType {
	return &file_protos_skynet_proto_enumTypes[0]
}

func (x AnonymApproach) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AnonymApproach.Descriptor instead.
func (AnonymApproach) EnumDescriptor() ([]byte, []int) {
	return file_protos_skynet_proto_rawDescGZIP(), []int{0}
}

type CategoricalAnonimisation int32

const (
	CategoricalAnonimisation_CATEGORICAL_FAKE          CategoricalAnonimisation = 0
	CategoricalAnonimisation_CATEGORICAL_FAKE_AUTO     CategoricalAnonimisation = 1
	CategoricalAnonimisation_CATEGORICAL_RESAMPLING    CategoricalAnonimisation = 2
	CategoricalAnonimisation_CATEGORICAL_TOKENIZATION  CategoricalAnonimisation = 3
	CategoricalAnonimisation_CATEGORICAL_EMAIL_MASKING CategoricalAnonimisation = 4
)

// Enum value maps for CategoricalAnonimisation.
var (
	CategoricalAnonimisation_name = map[int32]string{
		0: "CATEGORICAL_FAKE",
		1: "CATEGORICAL_FAKE_AUTO",
		2: "CATEGORICAL_RESAMPLING",
		3: "CATEGORICAL_TOKENIZATION",
		4: "CATEGORICAL_EMAIL_MASKING",
	}
	CategoricalAnonimisation_value = map[string]int32{
		"CATEGORICAL_FAKE":          0,
		"CATEGORICAL_FAKE_AUTO":     1,
		"CATEGORICAL_RESAMPLING":    2,
		"CATEGORICAL_TOKENIZATION":  3,
		"CATEGORICAL_EMAIL_MASKING": 4,
	}
)

func (x CategoricalAnonimisation) Enum() *CategoricalAnonimisation {
	p := new(CategoricalAnonimisation)
	*p = x
	return p
}

func (x CategoricalAnonimisation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CategoricalAnonimisation) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_skynet_proto_enumTypes[1].Descriptor()
}

func (CategoricalAnonimisation) Type() protoreflect.EnumType {
	return &file_protos_skynet_proto_enumTypes[1]
}

func (x CategoricalAnonimisation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CategoricalAnonimisation.Descriptor instead.
func (CategoricalAnonimisation) EnumDescriptor() ([]byte, []int) {
	return file_protos_skynet_proto_rawDescGZIP(), []int{1}
}

type DateTimeAnonimisation int32

const (
	DateTimeAnonimisation_DATETIME_FAKE  DateTimeAnonimisation = 0
	DateTimeAnonimisation_DATETIME_NOISE DateTimeAnonimisation = 1
)

// Enum value maps for DateTimeAnonimisation.
var (
	DateTimeAnonimisation_name = map[int32]string{
		0: "DATETIME_FAKE",
		1: "DATETIME_NOISE",
	}
	DateTimeAnonimisation_value = map[string]int32{
		"DATETIME_FAKE":  0,
		"DATETIME_NOISE": 1,
	}
)

func (x DateTimeAnonimisation) Enum() *DateTimeAnonimisation {
	p := new(DateTimeAnonimisation)
	*p = x
	return p
}

func (x DateTimeAnonimisation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DateTimeAnonimisation) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_skynet_proto_enumTypes[2].Descriptor()
}

func (DateTimeAnonimisation) Type() protoreflect.EnumType {
	return &file_protos_skynet_proto_enumTypes[2]
}

func (x DateTimeAnonimisation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DateTimeAnonimisation.Descriptor instead.
func (DateTimeAnonimisation) EnumDescriptor() ([]byte, []int) {
	return file_protos_skynet_proto_rawDescGZIP(), []int{2}
}

type NumericAnonimisation int32

const (
	NumericAnonimisation_NUMERIC_NOISE    NumericAnonimisation = 0
	NumericAnonimisation_NUMERIC_BINNING  NumericAnonimisation = 1
	NumericAnonimisation_NUMERIC_MASKING  NumericAnonimisation = 2
	NumericAnonimisation_NUMERIC_ROUNDING NumericAnonimisation = 3
)

// Enum value maps for NumericAnonimisation.
var (
	NumericAnonimisation_name = map[int32]string{
		0: "NUMERIC_NOISE",
		1: "NUMERIC_BINNING",
		2: "NUMERIC_MASKING",
		3: "NUMERIC_ROUNDING",
	}
	NumericAnonimisation_value = map[string]int32{
		"NUMERIC_NOISE":    0,
		"NUMERIC_BINNING":  1,
		"NUMERIC_MASKING":  2,
		"NUMERIC_ROUNDING": 3,
	}
)

func (x NumericAnonimisation) Enum() *NumericAnonimisation {
	p := new(NumericAnonimisation)
	*p = x
	return p
}

func (x NumericAnonimisation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NumericAnonimisation) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_skynet_proto_enumTypes[3].Descriptor()
}

func (NumericAnonimisation) Type() protoreflect.EnumType {
	return &file_protos_skynet_proto_enumTypes[3]
}

func (x NumericAnonimisation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NumericAnonimisation.Descriptor instead.
func (NumericAnonimisation) EnumDescriptor() ([]byte, []int) {
	return file_protos_skynet_proto_rawDescGZIP(), []int{3}
}

type ColType int32

const (
	ColType_ColType_Infer       ColType = 0
	ColType_ColType_Object      ColType = 1
	ColType_ColType_Int64       ColType = 2
	ColType_ColType_Float64     ColType = 3
	ColType_ColType_Bool        ColType = 4
	ColType_ColType_DateTime64  ColType = 5
	ColType_ColType_TimeDeltaMs ColType = 6
	ColType_ColType_Category    ColType = 7
)

// Enum value maps for ColType.
var (
	ColType_name = map[int32]string{
		0: "ColType_Infer",
		1: "ColType_Object",
		2: "ColType_Int64",
		3: "ColType_Float64",
		4: "ColType_Bool",
		5: "ColType_DateTime64",
		6: "ColType_TimeDeltaMs",
		7: "ColType_Category",
	}
	ColType_value = map[string]int32{
		"ColType_Infer":       0,
		"ColType_Object":      1,
		"ColType_Int64":       2,
		"ColType_Float64":     3,
		"ColType_Bool":        4,
		"ColType_DateTime64":  5,
		"ColType_TimeDeltaMs": 6,
		"ColType_Category":    7,
	}
)

func (x ColType) Enum() *ColType {
	p := new(ColType)
	*p = x
	return p
}

func (x ColType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ColType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_skynet_proto_enumTypes[4].Descriptor()
}

func (ColType) Type() protoreflect.EnumType {
	return &file_protos_skynet_proto_enumTypes[4]
}

func (x ColType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ColType.Descriptor instead.
func (ColType) EnumDescriptor() ([]byte, []int) {
	return file_protos_skynet_proto_rawDescGZIP(), []int{4}
}

type VisualizerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinioInfo             *MinioInfo                  `protobuf:"bytes,1,opt,name=minio_info,json=minioInfo,proto3" json:"minio_info,omitempty"`
	FilePath              string                      `protobuf:"bytes,2,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	DeserializationConfig *LightDeserializationConfig `protobuf:"bytes,3,opt,name=deserialization_config,json=deserializationConfig,proto3" json:"deserialization_config,omitempty"`
}

func (x *VisualizerRequest) Reset() {
	*x = VisualizerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_skynet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VisualizerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VisualizerRequest) ProtoMessage() {}

func (x *VisualizerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_skynet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VisualizerRequest.ProtoReflect.Descriptor instead.
func (*VisualizerRequest) Descriptor() ([]byte, []int) {
	return file_protos_skynet_proto_rawDescGZIP(), []int{0}
}

func (x *VisualizerRequest) GetMinioInfo() *MinioInfo {
	if x != nil {
		return x.MinioInfo
	}
	return nil
}

func (x *VisualizerRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *VisualizerRequest) GetDeserializationConfig() *LightDeserializationConfig {
	if x != nil {
		return x.DeserializationConfig
	}
	return nil
}

type VisualizerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table map[string]*Column `protobuf:"bytes,1,rep,name=table,proto3" json:"table,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *VisualizerResponse) Reset() {
	*x = VisualizerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_skynet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VisualizerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VisualizerResponse) ProtoMessage() {}

func (x *VisualizerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_skynet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VisualizerResponse.ProtoReflect.Descriptor instead.
func (*VisualizerResponse) Descriptor() ([]byte, []int) {
	return file_protos_skynet_proto_rawDescGZIP(), []int{1}
}

func (x *VisualizerResponse) GetTable() map[string]*Column {
	if x != nil {
		return x.Table
	}
	return nil
}

type Column struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColType ColType  `protobuf:"varint,1,opt,name=col_type,json=colType,proto3,enum=protos.ColType" json:"col_type,omitempty"`
	Values  []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Column) Reset() {
	*x = Column{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_skynet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column) ProtoMessage() {}

func (x *Column) ProtoReflect() protoreflect.Message {
	mi := &file_protos_skynet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column.ProtoReflect.Descriptor instead.
func (*Column) Descriptor() ([]byte, []int) {
	return file_protos_skynet_proto_rawDescGZIP(), []int{2}
}

func (x *Column) GetColType() ColType {
	if x != nil {
		return x.ColType
	}
	return ColType_ColType_Infer
}

func (x *Column) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type SydoniaAnonimiserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinioInfo *MinioInfo `protobuf:"bytes,1,opt,name=minio_info,json=minioInfo,proto3" json:"minio_info,omitempty"`
	// Types that are assignable to SydoniaAnonimisationStrategy:
	//
	//	*SydoniaAnonimiserRequest_SadGeneralSegmentAndSadItemStrategy
	SydoniaAnonimisationStrategy isSydoniaAnonimiserRequest_SydoniaAnonimisationStrategy `protobuf_oneof:"sydoniaAnonimisationStrategy"`
}

func (x *SydoniaAnonimiserRequest) Reset() {
	*x = SydoniaAnonimiserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_skynet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SydoniaAnonimiserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SydoniaAnonimiserRequest) ProtoMessage() {}

func (x *SydoniaAnonimiserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_skynet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SydoniaAnonimiserRequest.ProtoReflect.Descriptor instead.
func (*SydoniaAnonimiserRequest) Descriptor() ([]byte, []int) {
	return file_protos_skynet_proto_rawDescGZIP(), []int{3}
}

func (x *SydoniaAnonimiserRequest) GetMinioInfo() *MinioInfo {
	if x != nil {
		return x.MinioInfo
	}
	return nil
}

func (m *SydoniaAnonimiserRequest) GetSydoniaAnonimisationStrategy() isSydoniaAnonimiserRequest_SydoniaAnonimisationStrategy {
	if m != nil {
		return m.SydoniaAnonimisationStrategy
	}
	return nil
}

func (x *SydoniaAnonimiserRequest) GetSadGeneralSegmentAndSadItemStrategy() *GeneralSegmentAndSadItemStrategy {
	if x, ok := x.GetSydoniaAnonimisationStrategy().(*SydoniaAnonimiserRequest_SadGeneralSegmentAndSadItemStrategy); ok {
		return x.SadGeneralSegmentAndSadItemStrategy
	}
	return nil
}

type isSydoniaAnonimiserRequest_SydoniaAnonimisationStrategy interface {
	isSydoniaAnonimiserRequest_SydoniaAnonimisationStrategy()
}

type SydoniaAnonimiserRequest_SadGeneralSegmentAndSadItemStrategy struct {
	SadGeneralSegmentAndSadItemStrategy *GeneralSegmentAndSadItemStrategy `protobuf:"bytes,2,opt,name=sad_general_segment_and_sad_item_strategy,json=sadGeneralSegmentAndSadItemStrategy,proto3,oneof"`
}

func (*SydoniaAnonimiserRequest_SadGeneralSegmentAndSadItemStrategy) isSydoniaAnonimiserRequest_SydoniaAnonimisationStrategy() {
}

type GeneralSegmentAndSadItemStrategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeneralSegmentConfig *SydoniaFileConfig   `protobuf:"bytes,1,opt,name=general_segment_config,json=generalSegmentConfig,proto3" json:"general_segment_config,omitempty"`
	SadItemConfig        *SydoniaFileConfig   `protobuf:"bytes,2,opt,name=sad_item_config,json=sadItemConfig,proto3" json:"sad_item_config,omitempty"`
	SerializationConfig  *SerializationConfig `protobuf:"bytes,3,opt,name=serialization_config,json=serializationConfig,proto3" json:"serialization_config,omitempty"`
}

func (x *GeneralSegmentAndSadItemStrategy) Reset() {
	*x = GeneralSegmentAndSadItemStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_skynet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneralSegmentAndSadItemStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralSegmentAndSadItemStrategy) ProtoMessage() {}

func (x *GeneralSegmentAndSadItemStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_protos_skynet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralSegmentAndSadItemStrategy.ProtoReflect.Descriptor instead.
func (*GeneralSegmentAndSadItemStrategy) Descriptor() ([]byte, []int) {
	return file_protos_skynet_proto_rawDescGZIP(), []int{4}
}

func (x *GeneralSegmentAndSadItemStrategy) GetGeneralSegmentConfig() *SydoniaFileConfig {
	if x != nil {
		return x.GeneralSegmentConfig
	}
	return nil
}

func (x *GeneralSegmentAndSadItemStrategy) GetSadItemConfig() *SydoniaFileConfig {
	if x != nil {
		return x.SadItemConfig
	}
	return nil
}

func (x *GeneralSegmentAndSadItemStrategy) GetSerializationConfig() *SerializationConfig {
	if x != nil {
		return x.SerializationConfig
	}
	return nil
}

type SydoniaFileConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath              string                 `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	UsedCols              map[string]*ColConfig  `protobuf:"bytes,2,rep,name=used_cols,json=usedCols,proto3" json:"used_cols,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DeserializationConfig *DeserializationConfig `protobuf:"bytes,4,opt,name=deserialization_config,json=deserializationConfig,proto3" json:"deserialization_config,omitempty"`
}

func (x *SydoniaFileConfig) Reset() {
	*x = SydoniaFileConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_skynet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SydoniaFileConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SydoniaFileConfig) ProtoMessage() {}

func (x *SydoniaFileConfig) ProtoReflect() protoreflect.Message {
	mi := &file_protos_skynet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SydoniaFileConfig.ProtoReflect.Descriptor instead.
func (*SydoniaFileConfig) Descriptor() ([]byte, []int) {
	return file_protos_skynet_proto_rawDescGZIP(), []int{5}
}

func (x *SydoniaFileConfig) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *SydoniaFileConfig) GetUsedCols() map[string]*ColConfig {
	if x != nil {
		return x.UsedCols
	}
	return nil
}

func (x *SydoniaFileConfig) GetDeserializationConfig() *DeserializationConfig {
	if x != nil {
		return x.DeserializationConfig
	}
	return nil
}

type SydoniaAnonimiserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnonimisedFilePath map[string]string `protobuf:"bytes,1,rep,name=anonimised_file_path,json=anonimisedFilePath,proto3" json:"anonimised_file_path,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SydoniaAnonimiserResponse) Reset() {
	*x = SydoniaAnonimiserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_skynet_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SydoniaAnonimiserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SydoniaAnonimiserResponse) ProtoMessage() {}

func (x *SydoniaAnonimiserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_skynet_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SydoniaAnonimiserResponse.ProtoReflect.Descriptor instead.
func (*SydoniaAnonimiserResponse) Descriptor() ([]byte, []int) {
	return file_protos_skynet_proto_rawDescGZIP(), []int{6}
}

func (x *SydoniaAnonimiserResponse) GetAnonimisedFilePath() map[string]string {
	if x != nil {
		return x.AnonimisedFilePath
	}
	return nil
}

type AnonimiseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinioInfo           *MinioInfo            `protobuf:"bytes,1,opt,name=minio_info,json=minioInfo,proto3" json:"minio_info,omitempty"`
	FilePath            string                `protobuf:"bytes,2,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	UsedCols            map[string]*ColConfig `protobuf:"bytes,3,rep,name=used_cols,json=usedCols,proto3" json:"used_cols,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SerializationConfig *SerializationConfig  `protobuf:"bytes,4,opt,name=serialization_config,json=serializationConfig,proto3" json:"serialization_config,omitempty"`
	// Types that are assignable to AnonimisationStrategy:
	//
	//	*AnonimiseRequest_KAnonyme
	//	*AnonimiseRequest_NaiveStrategy
	//	*AnonimiseRequest_Synthetise
	AnonimisationStrategy isAnonimiseRequest_AnonimisationStrategy `protobuf_oneof:"anonimisationStrategy"`
	DeserializationConfig *DeserializationConfig                   `protobuf:"bytes,9,opt,name=deserialization_config,json=deserializationConfig,proto3" json:"deserialization_config,omitempty"`
}

func (x *AnonimiseRequest) Reset() {
	*x = AnonimiseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_skynet_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnonimiseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnonimiseRequest) ProtoMessage() {}

func (x *AnonimiseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_skynet_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnonimiseRequest.ProtoReflect.Descriptor instead.
func (*AnonimiseRequest) Descriptor() ([]byte, []int) {
	return file_protos_skynet_proto_rawDescGZIP(), []int{7}
}

func (x *AnonimiseRequest) GetMinioInfo() *MinioInfo {
	if x != nil {
		return x.MinioInfo
	}
	return nil
}

func (x *AnonimiseRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *AnonimiseRequest) GetUsedCols() map[string]*ColConfig {
	if x != nil {
		return x.UsedCols
	}
	return nil
}

func (x *AnonimiseRequest) GetSerializationConfig() *SerializationConfig {
	if x != nil {
		return x.SerializationConfig
	}
	return nil
}

func (m *AnonimiseRequest) GetAnonimisationStrategy() isAnonimiseRequest_AnonimisationStrategy {
	if m != nil {
		return m.AnonimisationStrategy
	}
	return nil
}

func (x *AnonimiseRequest) GetKAnonyme() *KAnonymeStrategy {
	if x, ok := x.GetAnonimisationStrategy().(*AnonimiseRequest_KAnonyme); ok {
		return x.KAnonyme
	}
	return nil
}

func (x *AnonimiseRequest) GetNaiveStrategy() *NaiveStrategy {
	if x, ok := x.GetAnonimisationStrategy().(*AnonimiseRequest_NaiveStrategy); ok {
		return x.NaiveStrategy
	}
	return nil
}

func (x *AnonimiseRequest) GetSynthetise() *SynthetiseStrategy {
	if x, ok := x.GetAnonimisationStrategy().(*AnonimiseRequest_Synthetise); ok {
		return x.Synthetise
	}
	return nil
}

func (x *AnonimiseRequest) GetDeserializationConfig() *DeserializationConfig {
	if x != nil {
		return x.DeserializationConfig
	}
	return nil
}

type isAnonimiseRequest_AnonimisationStrategy interface {
	isAnonimiseRequest_AnonimisationStrategy()
}

type AnonimiseRequest_KAnonyme struct {
	KAnonyme *KAnonymeStrategy `protobuf:"bytes,5,opt,name=k_anonyme,json=kAnonyme,proto3,oneof"`
}

type AnonimiseRequest_NaiveStrategy struct {
	NaiveStrategy *NaiveStrategy `protobuf:"bytes,6,opt,name=naive_strategy,json=naiveStrategy,proto3,oneof"`
}

type AnonimiseRequest_Synthetise struct {
	Synthetise *SynthetiseStrategy `protobuf:"bytes,8,opt,name=synthetise,proto3,oneof"`
}

func (*AnonimiseRequest_KAnonyme) isAnonimiseRequest_AnonimisationStrategy() {}

func (*AnonimiseRequest_NaiveStrategy) isAnonimiseRequest_AnonimisationStrategy() {}

func (*AnonimiseRequest_Synthetise) isAnonimiseRequest_AnonimisationStrategy() {}

type AnonimiseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnonimisedFilePath string `protobuf:"bytes,2,opt,name=anonimised_file_path,json=anonimisedFilePath,proto3" json:"anonimised_file_path,omitempty"`
	MapperFilePath     string `protobuf:"bytes,3,opt,name=mapper_file_path,json=mapperFilePath,proto3" json:"mapper_file_path,omitempty"`
}

func (x *AnonimiseResponse) Reset() {
	*x = AnonimiseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_skynet_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnonimiseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnonimiseResponse) ProtoMessage() {}

func (x *AnonimiseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_skynet_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnonimiseResponse.ProtoReflect.Descriptor instead.
func (*AnonimiseResponse) Descriptor() ([]byte, []int) {
	return file_protos_skynet_proto_rawDescGZIP(), []int{8}
}

func (x *AnonimiseResponse) GetAnonimisedFilePath() string {
	if x != nil {
		return x.AnonimisedFilePath
	}
	return ""
}

func (x *AnonimiseResponse) GetMapperFilePath() string {
	if x != nil {
		return x.MapperFilePath
	}
	return ""
}

type SerializationConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath  string `protobuf:"bytes,2,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	NoHeader  bool   `protobuf:"varint,3,opt,name=no_header,json=noHeader,proto3" json:"no_header,omitempty"`
	Separator string `protobuf:"bytes,5,opt,name=separator,proto3" json:"separator,omitempty"`
}

func (x *SerializationConfig) Reset() {
	*x = SerializationConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_skynet_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SerializationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerializationConfig) ProtoMessage() {}

func (x *SerializationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_protos_skynet_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerializationConfig.ProtoReflect.Descriptor instead.
func (*SerializationConfig) Descriptor() ([]byte, []int) {
	return file_protos_skynet_proto_rawDescGZIP(), []int{9}
}

func (x *SerializationConfig) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *SerializationConfig) GetNoHeader() bool {
	if x != nil {
		return x.NoHeader
	}
	return false
}

func (x *SerializationConfig) GetSeparator() string {
	if x != nil {
		return x.Separator
	}
	return ""
}

type LightDeserializationConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Separator string `protobuf:"bytes,1,opt,name=separator,proto3" json:"separator,omitempty"`
}

func (x *LightDeserializationConfig) Reset() {
	*x = LightDeserializationConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_skynet_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LightDeserializationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LightDeserializationConfig) ProtoMessage() {}

func (x *LightDeserializationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_protos_skynet_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LightDeserializationConfig.ProtoReflect.Descriptor instead.
func (*LightDeserializationConfig) Descriptor() ([]byte, []int) {
	return file_protos_skynet_proto_rawDescGZIP(), []int{10}
}

func (x *LightDeserializationConfig) GetSeparator() string {
	if x != nil {
		return x.Separator
	}
	return ""
}

type DeserializationConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsedCols  map[string]*ColConfig `protobuf:"bytes,1,rep,name=used_cols,json=usedCols,proto3" json:"used_cols,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NaValues  []string              `protobuf:"bytes,2,rep,name=na_values,json=naValues,proto3" json:"na_values,omitempty"`
	Separator string                `protobuf:"bytes,3,opt,name=separator,proto3" json:"separator,omitempty"`
}

func (x *DeserializationConfig) Reset() {
	*x = DeserializationConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_skynet_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeserializationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeserializationConfig) ProtoMessage() {}

func (x *DeserializationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_protos_skynet_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeserializationConfig.ProtoReflect.Descriptor instead.
func (*DeserializationConfig) Descriptor() ([]byte, []int) {
	return file_protos_skynet_proto_rawDescGZIP(), []int{11}
}

func (x *DeserializationConfig) GetUsedCols() map[string]*ColConfig {
	if x != nil {
		return x.UsedCols
	}
	return nil
}

func (x *DeserializationConfig) GetNaValues() []string {
	if x != nil {
		return x.NaValues
	}
	return nil
}

func (x *DeserializationConfig) GetSeparator() string {
	if x != nil {
		return x.Separator
	}
	return ""
}

type KAnonymeStrategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Algorithm     AnonymApproach `protobuf:"varint,1,opt,name=algorithm,proto3,enum=protos.AnonymApproach" json:"algorithm,omitempty"`
	StudiedColumn string         `protobuf:"bytes,2,opt,name=studied_column,json=studiedColumn,proto3" json:"studied_column,omitempty"`
	K             int32          `protobuf:"varint,3,opt,name=k,proto3" json:"k,omitempty"`
}

func (x *KAnonymeStrategy) Reset() {
	*x = KAnonymeStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_skynet_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KAnonymeStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KAnonymeStrategy) ProtoMessage() {}

func (x *KAnonymeStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_protos_skynet_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KAnonymeStrategy.ProtoReflect.Descriptor instead.
func (*KAnonymeStrategy) Descriptor() ([]byte, []int) {
	return file_protos_skynet_proto_rawDescGZIP(), []int{12}
}

func (x *KAnonymeStrategy) GetAlgorithm() AnonymApproach {
	if x != nil {
		return x.Algorithm
	}
	return AnonymApproach_K_Anonym
}

func (x *KAnonymeStrategy) GetStudiedColumn() string {
	if x != nil {
		return x.StudiedColumn
	}
	return ""
}

func (x *KAnonymeStrategy) GetK() int32 {
	if x != nil {
		return x.K
	}
	return 0
}

type ColConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColTypes       ColType `protobuf:"varint,1,opt,name=col_types,json=colTypes,proto3,enum=protos.ColType" json:"col_types,omitempty"`
	ToPsuedonimise bool    `protobuf:"varint,2,opt,name=to_psuedonimise,json=toPsuedonimise,proto3" json:"to_psuedonimise,omitempty"`
}

func (x *ColConfig) Reset() {
	*x = ColConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_skynet_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColConfig) ProtoMessage() {}

func (x *ColConfig) ProtoReflect() protoreflect.Message {
	mi := &file_protos_skynet_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColConfig.ProtoReflect.Descriptor instead.
func (*ColConfig) Descriptor() ([]byte, []int) {
	return file_protos_skynet_proto_rawDescGZIP(), []int{13}
}

func (x *ColConfig) GetColTypes() ColType {
	if x != nil {
		return x.ColTypes
	}
	return ColType_ColType_Infer
}

func (x *ColConfig) GetToPsuedonimise() bool {
	if x != nil {
		return x.ToPsuedonimise
	}
	return false
}

type SynthetiseStrategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epsilon float32 `protobuf:"fixed32,1,opt,name=epsilon,proto3" json:"epsilon,omitempty"`
}

func (x *SynthetiseStrategy) Reset() {
	*x = SynthetiseStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_skynet_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SynthetiseStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SynthetiseStrategy) ProtoMessage() {}

func (x *SynthetiseStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_protos_skynet_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SynthetiseStrategy.ProtoReflect.Descriptor instead.
func (*SynthetiseStrategy) Descriptor() ([]byte, []int) {
	return file_protos_skynet_proto_rawDescGZIP(), []int{14}
}

func (x *SynthetiseStrategy) GetEpsilon() float32 {
	if x != nil {
		return x.Epsilon
	}
	return 0
}

type NaiveStrategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lang            string                              `protobuf:"bytes,1,opt,name=lang,proto3" json:"lang,omitempty"`
	CategoricalCols map[string]CategoricalAnonimisation `protobuf:"bytes,2,rep,name=categorical_cols,json=categoricalCols,proto3" json:"categorical_cols,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=protos.CategoricalAnonimisation"`
	NumericalCols   map[string]NumericAnonimisation     `protobuf:"bytes,3,rep,name=numerical_cols,json=numericalCols,proto3" json:"numerical_cols,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=protos.NumericAnonimisation"`
	DatetimeCols    map[string]DateTimeAnonimisation    `protobuf:"bytes,4,rep,name=datetime_cols,json=datetimeCols,proto3" json:"datetime_cols,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=protos.DateTimeAnonimisation"`
}

func (x *NaiveStrategy) Reset() {
	*x = NaiveStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_skynet_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NaiveStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NaiveStrategy) ProtoMessage() {}

func (x *NaiveStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_protos_skynet_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NaiveStrategy.ProtoReflect.Descriptor instead.
func (*NaiveStrategy) Descriptor() ([]byte, []int) {
	return file_protos_skynet_proto_rawDescGZIP(), []int{15}
}

func (x *NaiveStrategy) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *NaiveStrategy) GetCategoricalCols() map[string]CategoricalAnonimisation {
	if x != nil {
		return x.CategoricalCols
	}
	return nil
}

func (x *NaiveStrategy) GetNumericalCols() map[string]NumericAnonimisation {
	if x != nil {
		return x.NumericalCols
	}
	return nil
}

func (x *NaiveStrategy) GetDatetimeCols() map[string]DateTimeAnonimisation {
	if x != nil {
		return x.DatetimeCols
	}
	return nil
}

type MinioInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Secret string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	Token  string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *MinioInfo) Reset() {
	*x = MinioInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_skynet_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinioInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinioInfo) ProtoMessage() {}

func (x *MinioInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_skynet_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinioInfo.ProtoReflect.Descriptor instead.
func (*MinioInfo) Descriptor() ([]byte, []int) {
	return file_protos_skynet_proto_rawDescGZIP(), []int{16}
}

func (x *MinioInfo) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MinioInfo) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *MinioInfo) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

var File_protos_skynet_proto protoreflect.FileDescriptor

var file_protos_skynet_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x6b, 0x79, 0x6e, 0x65, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbd, 0x01, 0x0a, 0x11,
	0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x30, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4d,
	0x69, 0x6e, 0x69, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x59, 0x0a, 0x16, 0x64, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x44,
	0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x15, 0x64, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x9b, 0x01, 0x0a, 0x12,
	0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x56, 0x69, 0x73, 0x75, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x1a,
	0x48, 0x0a, 0x0a, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4c, 0x0a, 0x06, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x12, 0x2a, 0x0a, 0x08, 0x63, 0x6f, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43,
	0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xf1, 0x01, 0x0a, 0x18, 0x53, 0x79, 0x64, 0x6f,
	0x6e, 0x69, 0x61, 0x41, 0x6e, 0x6f, 0x6e, 0x69, 0x6d, 0x69, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6d, 0x69, 0x6e,
	0x69, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x82, 0x01, 0x0a, 0x29, 0x73, 0x61, 0x64, 0x5f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61,
	0x6e, 0x64, 0x5f, 0x73, 0x61, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x61, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x48, 0x00, 0x52, 0x23, 0x73, 0x61, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x6c, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x61, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x42, 0x1e, 0x0a, 0x1c, 0x73,
	0x79, 0x64, 0x6f, 0x6e, 0x69, 0x61, 0x41, 0x6e, 0x6f, 0x6e, 0x69, 0x6d, 0x69, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x22, 0x86, 0x02, 0x0a, 0x20,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6e,
	0x64, 0x53, 0x61, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x12, 0x4f, 0x0a, 0x16, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x79, 0x64, 0x6f, 0x6e, 0x69,
	0x61, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x14, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x41, 0x0a, 0x0f, 0x73, 0x61, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x53, 0x79, 0x64, 0x6f, 0x6e, 0x69, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x73, 0x61, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x4e, 0x0a, 0x14, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x13, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0x9c, 0x02, 0x0a, 0x11, 0x53, 0x79, 0x64, 0x6f, 0x6e, 0x69, 0x61,
	0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x44, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x64, 0x5f,
	0x63, 0x6f, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x53, 0x79, 0x64, 0x6f, 0x6e, 0x69, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x75, 0x73, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x73, 0x12, 0x54, 0x0a,
	0x16, 0x64, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x15, 0x64, 0x65,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x1a, 0x4e, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43,
	0x6f, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xcf, 0x01, 0x0a, 0x19, 0x53, 0x79, 0x64, 0x6f, 0x6e, 0x69, 0x61, 0x41,
	0x6e, 0x6f, 0x6e, 0x69, 0x6d, 0x69, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6b, 0x0a, 0x14, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x6d, 0x69, 0x73, 0x65, 0x64, 0x5f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x39, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x79, 0x64, 0x6f, 0x6e, 0x69, 0x61,
	0x41, 0x6e, 0x6f, 0x6e, 0x69, 0x6d, 0x69, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x41, 0x6e, 0x6f, 0x6e, 0x69, 0x6d, 0x69, 0x73, 0x65, 0x64, 0x46, 0x69, 0x6c,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x12, 0x61, 0x6e, 0x6f, 0x6e,
	0x69, 0x6d, 0x69, 0x73, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x1a, 0x45,
	0x0a, 0x17, 0x41, 0x6e, 0x6f, 0x6e, 0x69, 0x6d, 0x69, 0x73, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xec, 0x04, 0x0a, 0x10, 0x41, 0x6e, 0x6f, 0x6e, 0x69, 0x6d,
	0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x6d, 0x69,
	0x6e, 0x69, 0x6f, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x43, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x6e, 0x6f, 0x6e, 0x69, 0x6d, 0x69, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x75, 0x73, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x73, 0x12, 0x4e,
	0x0a, 0x14, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x13, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x37,
	0x0a, 0x09, 0x6b, 0x5f, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4b, 0x41, 0x6e, 0x6f, 0x6e,
	0x79, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x48, 0x00, 0x52, 0x08, 0x6b,
	0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0e, 0x6e, 0x61, 0x69, 0x76, 0x65,
	0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4e, 0x61, 0x69, 0x76, 0x65, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x48, 0x00, 0x52, 0x0d, 0x6e, 0x61, 0x69, 0x76, 0x65, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x3c, 0x0a, 0x0a, 0x73, 0x79, 0x6e, 0x74, 0x68,
	0x65, 0x74, 0x69, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x74, 0x69, 0x73, 0x65, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x79, 0x6e, 0x74, 0x68,
	0x65, 0x74, 0x69, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x16, 0x64, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x44,
	0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x15, 0x64, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x4e, 0x0a, 0x0d, 0x55,
	0x73, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x17, 0x0a, 0x15, 0x61,
	0x6e, 0x6f, 0x6e, 0x69, 0x6d, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x22, 0x6f, 0x0a, 0x11, 0x41, 0x6e, 0x6f, 0x6e, 0x69, 0x6d, 0x69, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x6e, 0x6f,
	0x6e, 0x69, 0x6d, 0x69, 0x73, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x6d, 0x69,
	0x73, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x28, 0x0a, 0x10, 0x6d,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x46, 0x69, 0x6c,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x6d, 0x0a, 0x13, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x5f,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6e, 0x6f,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x70, 0x61, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x22, 0x3a, 0x0a, 0x1a, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x65, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x22, 0xec, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x48, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x55, 0x73, 0x65,
	0x64, 0x43, 0x6f, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x75, 0x73, 0x65, 0x64,
	0x43, 0x6f, 0x6c, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x61, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x1a,
	0x4e, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x7d, 0x0a, 0x10, 0x4b, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x12, 0x34, 0x0a, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x61, 0x63, 0x68, 0x52, 0x09,
	0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x75,
	0x64, 0x69, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x69, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x12, 0x0c, 0x0a, 0x01, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x6b, 0x22, 0x62,
	0x0a, 0x09, 0x43, 0x6f, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x09, 0x63,
	0x6f, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x63, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x5f,
	0x70, 0x73, 0x75, 0x65, 0x64, 0x6f, 0x6e, 0x69, 0x6d, 0x69, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x74, 0x6f, 0x50, 0x73, 0x75, 0x65, 0x64, 0x6f, 0x6e, 0x69, 0x6d, 0x69,
	0x73, 0x65, 0x22, 0x2e, 0x0a, 0x12, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x74, 0x69, 0x73, 0x65,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x70, 0x73, 0x69,
	0x6c, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x65, 0x70, 0x73, 0x69, 0x6c,
	0x6f, 0x6e, 0x22, 0xbf, 0x04, 0x0a, 0x0d, 0x4e, 0x61, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x55, 0x0a, 0x10, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4e, 0x61, 0x69, 0x76,
	0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x73, 0x12,
	0x4f, 0x0a, 0x0e, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6c,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x4e, 0x61, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x4e,
	0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x73,
	0x12, 0x4c, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6c,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x4e, 0x61, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x44,
	0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6c, 0x73, 0x1a, 0x64,
	0x0a, 0x14, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x41, 0x6e, 0x6f, 0x6e,
	0x69, 0x6d, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5e, 0x0a, 0x12, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x61,
	0x6c, 0x43, 0x6f, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x41, 0x6e, 0x6f, 0x6e,
	0x69, 0x6d, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5e, 0x0a, 0x11, 0x44, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x43, 0x6f, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x41, 0x6e, 0x6f, 0x6e,
	0x69, 0x6d, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x4b, 0x0a, 0x09, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x2a, 0x40, 0x0a, 0x0e, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x61, 0x63, 0x68, 0x12, 0x0c, 0x0a, 0x08, 0x4b, 0x5f, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x10,
	0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x5f, 0x44, 0x69, 0x76, 0x65, 0x72, 0x73, 0x69, 0x74, 0x79,
	0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x4e, 0x45, 0x53,
	0x53, 0x10, 0x02, 0x2a, 0xa4, 0x01, 0x0a, 0x18, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x63, 0x61, 0x6c, 0x41, 0x6e, 0x6f, 0x6e, 0x69, 0x6d, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x10, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x49, 0x43, 0x41, 0x4c, 0x5f,
	0x46, 0x41, 0x4b, 0x45, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f,
	0x52, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x46, 0x41, 0x4b, 0x45, 0x5f, 0x41, 0x55, 0x54, 0x4f, 0x10,
	0x01, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x49, 0x43, 0x41, 0x4c,
	0x5f, 0x52, 0x45, 0x53, 0x41, 0x4d, 0x50, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x1c, 0x0a,
	0x18, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x54, 0x4f, 0x4b,
	0x45, 0x4e, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x43,
	0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c,
	0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x2a, 0x3e, 0x0a, 0x15, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x41, 0x6e, 0x6f, 0x6e, 0x69, 0x6d, 0x69, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x41, 0x54, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x5f,
	0x46, 0x41, 0x4b, 0x45, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x41, 0x54, 0x45, 0x54, 0x49,
	0x4d, 0x45, 0x5f, 0x4e, 0x4f, 0x49, 0x53, 0x45, 0x10, 0x01, 0x2a, 0x69, 0x0a, 0x14, 0x4e, 0x75,
	0x6d, 0x65, 0x72, 0x69, 0x63, 0x41, 0x6e, 0x6f, 0x6e, 0x69, 0x6d, 0x69, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x55, 0x4d, 0x45, 0x52, 0x49, 0x43, 0x5f, 0x4e, 0x4f,
	0x49, 0x53, 0x45, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x55, 0x4d, 0x45, 0x52, 0x49, 0x43,
	0x5f, 0x42, 0x49, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x55,
	0x4d, 0x45, 0x52, 0x49, 0x43, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12,
	0x14, 0x0a, 0x10, 0x4e, 0x55, 0x4d, 0x45, 0x52, 0x49, 0x43, 0x5f, 0x52, 0x4f, 0x55, 0x4e, 0x44,
	0x49, 0x4e, 0x47, 0x10, 0x03, 0x2a, 0xb1, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x49, 0x6e, 0x66,
	0x65, 0x72, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x6f, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x43,
	0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x36, 0x34, 0x10, 0x03,
	0x12, 0x10, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x6f, 0x6f, 0x6c,
	0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x36, 0x34, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x6f,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x4d,
	0x73, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x10, 0x07, 0x32, 0xf6, 0x02, 0x0a, 0x0d, 0x53, 0x6b,
	0x79, 0x6e, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x6e, 0x0a, 0x09, 0x41,
	0x6e, 0x6f, 0x6e, 0x69, 0x6d, 0x69, 0x73, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x41, 0x6e, 0x6f, 0x6e, 0x69, 0x6d, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x6e, 0x6f, 0x6e,
	0x69, 0x6d, 0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x26, 0x22, 0x21, 0x2f, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x2d, 0x62, 0x65,
	0x74, 0x61, 0x2f, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x6d, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x3a, 0x01, 0x2a, 0x12, 0x86, 0x01, 0x0a, 0x11,
	0x53, 0x79, 0x64, 0x6f, 0x6e, 0x69, 0x61, 0x41, 0x6e, 0x6f, 0x6e, 0x69, 0x6d, 0x69, 0x73, 0x65,
	0x72, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x79, 0x64, 0x6f, 0x6e,
	0x69, 0x61, 0x41, 0x6e, 0x6f, 0x6e, 0x69, 0x6d, 0x69, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x79, 0x64,
	0x6f, 0x6e, 0x69, 0x61, 0x41, 0x6e, 0x6f, 0x6e, 0x69, 0x6d, 0x69, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x22, 0x21,
	0x2f, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x2d, 0x62, 0x65, 0x74, 0x61, 0x2f, 0x61, 0x6e, 0x6f, 0x6e,
	0x69, 0x6d, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x79, 0x64, 0x6f, 0x6e, 0x69,
	0x61, 0x3a, 0x01, 0x2a, 0x12, 0x6c, 0x0a, 0x0a, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x72, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x56, 0x69, 0x73, 0x75,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x21, 0x22, 0x1c, 0x2f, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x2d, 0x62, 0x65, 0x74, 0x61, 0x2f, 0x63,
	0x73, 0x76, 0x2f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x3a,
	0x01, 0x2a, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x6f, 0x69, 0x73, 0x43, 0x68, 0x61, 0x73, 0x74, 0x65, 0x6c,
	0x2f, 0x53, 0x6b, 0x79, 0x6e, 0x65, 0x74, 0x2d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x2f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_skynet_proto_rawDescOnce sync.Once
	file_protos_skynet_proto_rawDescData = file_protos_skynet_proto_rawDesc
)

func file_protos_skynet_proto_rawDescGZIP() []byte {
	file_protos_skynet_proto_rawDescOnce.Do(func() {
		file_protos_skynet_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_skynet_proto_rawDescData)
	})
	return file_protos_skynet_proto_rawDescData
}

var file_protos_skynet_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_protos_skynet_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_protos_skynet_proto_goTypes = []interface{}{
	(AnonymApproach)(0),                      // 0: protos.AnonymApproach
	(CategoricalAnonimisation)(0),            // 1: protos.CategoricalAnonimisation
	(DateTimeAnonimisation)(0),               // 2: protos.DateTimeAnonimisation
	(NumericAnonimisation)(0),                // 3: protos.NumericAnonimisation
	(ColType)(0),                             // 4: protos.ColType
	(*VisualizerRequest)(nil),                // 5: protos.VisualizerRequest
	(*VisualizerResponse)(nil),               // 6: protos.VisualizerResponse
	(*Column)(nil),                           // 7: protos.Column
	(*SydoniaAnonimiserRequest)(nil),         // 8: protos.SydoniaAnonimiserRequest
	(*GeneralSegmentAndSadItemStrategy)(nil), // 9: protos.GeneralSegmentAndSadItemStrategy
	(*SydoniaFileConfig)(nil),                // 10: protos.SydoniaFileConfig
	(*SydoniaAnonimiserResponse)(nil),        // 11: protos.SydoniaAnonimiserResponse
	(*AnonimiseRequest)(nil),                 // 12: protos.AnonimiseRequest
	(*AnonimiseResponse)(nil),                // 13: protos.AnonimiseResponse
	(*SerializationConfig)(nil),              // 14: protos.SerializationConfig
	(*LightDeserializationConfig)(nil),       // 15: protos.LightDeserializationConfig
	(*DeserializationConfig)(nil),            // 16: protos.DeserializationConfig
	(*KAnonymeStrategy)(nil),                 // 17: protos.KAnonymeStrategy
	(*ColConfig)(nil),                        // 18: protos.ColConfig
	(*SynthetiseStrategy)(nil),               // 19: protos.SynthetiseStrategy
	(*NaiveStrategy)(nil),                    // 20: protos.NaiveStrategy
	(*MinioInfo)(nil),                        // 21: protos.MinioInfo
	nil,                                      // 22: protos.VisualizerResponse.TableEntry
	nil,                                      // 23: protos.SydoniaFileConfig.UsedColsEntry
	nil,                                      // 24: protos.SydoniaAnonimiserResponse.AnonimisedFilePathEntry
	nil,                                      // 25: protos.AnonimiseRequest.UsedColsEntry
	nil,                                      // 26: protos.DeserializationConfig.UsedColsEntry
	nil,                                      // 27: protos.NaiveStrategy.CategoricalColsEntry
	nil,                                      // 28: protos.NaiveStrategy.NumericalColsEntry
	nil,                                      // 29: protos.NaiveStrategy.DatetimeColsEntry
}
var file_protos_skynet_proto_depIdxs = []int32{
	21, // 0: protos.VisualizerRequest.minio_info:type_name -> protos.MinioInfo
	15, // 1: protos.VisualizerRequest.deserialization_config:type_name -> protos.LightDeserializationConfig
	22, // 2: protos.VisualizerResponse.table:type_name -> protos.VisualizerResponse.TableEntry
	4,  // 3: protos.Column.col_type:type_name -> protos.ColType
	21, // 4: protos.SydoniaAnonimiserRequest.minio_info:type_name -> protos.MinioInfo
	9,  // 5: protos.SydoniaAnonimiserRequest.sad_general_segment_and_sad_item_strategy:type_name -> protos.GeneralSegmentAndSadItemStrategy
	10, // 6: protos.GeneralSegmentAndSadItemStrategy.general_segment_config:type_name -> protos.SydoniaFileConfig
	10, // 7: protos.GeneralSegmentAndSadItemStrategy.sad_item_config:type_name -> protos.SydoniaFileConfig
	14, // 8: protos.GeneralSegmentAndSadItemStrategy.serialization_config:type_name -> protos.SerializationConfig
	23, // 9: protos.SydoniaFileConfig.used_cols:type_name -> protos.SydoniaFileConfig.UsedColsEntry
	16, // 10: protos.SydoniaFileConfig.deserialization_config:type_name -> protos.DeserializationConfig
	24, // 11: protos.SydoniaAnonimiserResponse.anonimised_file_path:type_name -> protos.SydoniaAnonimiserResponse.AnonimisedFilePathEntry
	21, // 12: protos.AnonimiseRequest.minio_info:type_name -> protos.MinioInfo
	25, // 13: protos.AnonimiseRequest.used_cols:type_name -> protos.AnonimiseRequest.UsedColsEntry
	14, // 14: protos.AnonimiseRequest.serialization_config:type_name -> protos.SerializationConfig
	17, // 15: protos.AnonimiseRequest.k_anonyme:type_name -> protos.KAnonymeStrategy
	20, // 16: protos.AnonimiseRequest.naive_strategy:type_name -> protos.NaiveStrategy
	19, // 17: protos.AnonimiseRequest.synthetise:type_name -> protos.SynthetiseStrategy
	16, // 18: protos.AnonimiseRequest.deserialization_config:type_name -> protos.DeserializationConfig
	26, // 19: protos.DeserializationConfig.used_cols:type_name -> protos.DeserializationConfig.UsedColsEntry
	0,  // 20: protos.KAnonymeStrategy.algorithm:type_name -> protos.AnonymApproach
	4,  // 21: protos.ColConfig.col_types:type_name -> protos.ColType
	27, // 22: protos.NaiveStrategy.categorical_cols:type_name -> protos.NaiveStrategy.CategoricalColsEntry
	28, // 23: protos.NaiveStrategy.numerical_cols:type_name -> protos.NaiveStrategy.NumericalColsEntry
	29, // 24: protos.NaiveStrategy.datetime_cols:type_name -> protos.NaiveStrategy.DatetimeColsEntry
	7,  // 25: protos.VisualizerResponse.TableEntry.value:type_name -> protos.Column
	18, // 26: protos.SydoniaFileConfig.UsedColsEntry.value:type_name -> protos.ColConfig
	18, // 27: protos.AnonimiseRequest.UsedColsEntry.value:type_name -> protos.ColConfig
	18, // 28: protos.DeserializationConfig.UsedColsEntry.value:type_name -> protos.ColConfig
	1,  // 29: protos.NaiveStrategy.CategoricalColsEntry.value:type_name -> protos.CategoricalAnonimisation
	3,  // 30: protos.NaiveStrategy.NumericalColsEntry.value:type_name -> protos.NumericAnonimisation
	2,  // 31: protos.NaiveStrategy.DatetimeColsEntry.value:type_name -> protos.DateTimeAnonimisation
	12, // 32: protos.SkynetBlocker.Anonimise:input_type -> protos.AnonimiseRequest
	8,  // 33: protos.SkynetBlocker.SydoniaAnonimiser:input_type -> protos.SydoniaAnonimiserRequest
	5,  // 34: protos.SkynetBlocker.Visualizer:input_type -> protos.VisualizerRequest
	13, // 35: protos.SkynetBlocker.Anonimise:output_type -> protos.AnonimiseResponse
	11, // 36: protos.SkynetBlocker.SydoniaAnonimiser:output_type -> protos.SydoniaAnonimiserResponse
	6,  // 37: protos.SkynetBlocker.Visualizer:output_type -> protos.VisualizerResponse
	35, // [35:38] is the sub-list for method output_type
	32, // [32:35] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_protos_skynet_proto_init() }
func file_protos_skynet_proto_init() {
	if File_protos_skynet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_skynet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VisualizerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_skynet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VisualizerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_skynet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Column); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_skynet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SydoniaAnonimiserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_skynet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneralSegmentAndSadItemStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_skynet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SydoniaFileConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_skynet_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SydoniaAnonimiserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_skynet_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnonimiseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_skynet_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnonimiseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_skynet_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SerializationConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_skynet_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LightDeserializationConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_skynet_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeserializationConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_skynet_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KAnonymeStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_skynet_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_skynet_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SynthetiseStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_skynet_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NaiveStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_skynet_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinioInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protos_skynet_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*SydoniaAnonimiserRequest_SadGeneralSegmentAndSadItemStrategy)(nil),
	}
	file_protos_skynet_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*AnonimiseRequest_KAnonyme)(nil),
		(*AnonimiseRequest_NaiveStrategy)(nil),
		(*AnonimiseRequest_Synthetise)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_skynet_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_skynet_proto_goTypes,
		DependencyIndexes: file_protos_skynet_proto_depIdxs,
		EnumInfos:         file_protos_skynet_proto_enumTypes,
		MessageInfos:      file_protos_skynet_proto_msgTypes,
	}.Build()
	File_protos_skynet_proto = out.File
	file_protos_skynet_proto_rawDesc = nil
	file_protos_skynet_proto_goTypes = nil
	file_protos_skynet_proto_depIdxs = nil
}
